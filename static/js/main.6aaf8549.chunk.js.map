{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Jumbotron/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","className","alt","name","src","image","onClick","removeFriend","id","Wrapper","children","Jumbotron","style","height","clear","paddingTop","textAlign","Title","App","state","friends","currentScore","highScore","resetClick","newfriends","map","friend","clicked","setState","console","log","newArray","newShuffled","sort","Math","random","this","key","occupation","location","Component","ReactDOM","render","document","getElementById"],"mappings":"syDAgCeA,MAhBf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QAEX,yBAAKC,IAAKF,EAAMG,KAAMF,UAAU,eAAeG,IAAKJ,EAAMK,QAG5D,0BAAMC,QAAS,kBAAMN,EAAMO,aAAaP,EAAMQ,KAAKP,UAAU,UAA7D,W,MCdSQ,MANf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAEnBD,EAAMU,W,MCSIC,MAZf,WACE,OACE,yBACEC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,WAAY,IAAKC,UAAW,UACjEf,UAAU,aAEV,oDACA,2G,MCHSgB,MAJf,SAAejB,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMU,W,OCwGvBQ,E,2MAnGbC,MAAQ,CACNC,UACAC,aAAc,EACdC,UAAW,G,EAGbC,WAAa,WACX,IAAMC,EAAa,EAAKL,MAAMC,QAAQK,IAAI,SAAAC,GAIxC,OAFAA,EAAOC,SAAU,EAEVD,IAGT,EAAKE,SAAS,CACZR,QAASI,K,EAIbjB,aAAe,SAAAC,GAEbqB,QAAQC,IAAI,KAAMtB,GAElB,IAAMuB,EAAW,EAAKZ,MAAMC,QAAQK,IAAI,SAAAC,GAiCtC,OA/BIlB,IAAOkB,EAAOlB,KAEZkB,EAAOC,SACT,EAAKC,SAAS,CACZP,aAAc,IAEhB,EAAKE,cAID,EAAKJ,MAAME,cAAgB,EAAKF,MAAMG,UACxC,EAAKM,SAAS,CACZP,aAAc,EAAKF,MAAME,aAAe,EACxCC,UAAW,EAAKH,MAAMG,UAAY,IAIpC,EAAKM,SAAS,CACZP,aAAc,EAAKF,MAAME,aAAe,IAOzCK,EAAOC,UACVD,EAAOC,SAAU,IAKdD,IAMTG,QAAQC,IAAIV,GAEZ,EAAKQ,SAAS,CAAER,QAASW,IAGzB,IAAMC,EAAc,EAAKb,MAAMC,QAAQa,KAAK,kBAAMC,KAAKC,SAAW,KAGlE,EAAKP,SAAS,CACZR,QAASY,K,wEAMH,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,wBAAwBI,KAAKjB,MAAME,aAAnC,oBAAkEe,KAAKjB,MAAMG,WAE5Ec,KAAKjB,MAAMC,QAAQK,IAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CACEnB,aAAc,EAAKA,aACnBC,GAAIkB,EAAOlB,GACX6B,IAAKX,EAAOlB,GACZL,KAAMuB,EAAOvB,KACbE,MAAOqB,EAAOrB,MACdiC,WAAYZ,EAAOY,WACnBC,SAAUb,EAAOa,kB,GA7FXC,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6aaf8549.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n\n/*\nprops={\n\n  removeFriend, \n            id,\n            key, \n            name, \n            image, \n            occupation, \n            location \n}\n*/\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n     \n        <img alt={props.name} className=\"card-img-top\" src={props.image} />\n      \n      \n      <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n        click\n      </span>\n   \n   \n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">\n    \n    {props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      <h1> The Clicky Lebowski</h1>\n      <h2> Click on an image to earn points, but don't click on any more than once!</h2>\n    </div>\n  );\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    currentScore: 0,\n    highScore: 0\n  };\n\n  resetClick = () => {\n    const newfriends = this.state.friends.map(friend => {\n\n      friend.clicked = false;\n\n      return friend\n    })\n\n    this.setState({\n      friends: newfriends\n    })\n  }\n\n  removeFriend = id => {\n\n    console.log(\"id\", id)\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const newArray = this.state.friends.map(friend => {\n\n      if (id === friend.id) {\n\n        if (friend.clicked) {\n          this.setState({\n            currentScore: 0,\n          })\n          this.resetClick()\n        }\n        else {\n\n          if (this.state.currentScore >= this.state.highScore) {\n            this.setState({\n              currentScore: this.state.currentScore + 1,\n              highScore: this.state.highScore + 1\n            })\n          }\n          else {\n            this.setState({\n              currentScore: this.state.currentScore + 1\n            })\n\n          }\n\n        }\n\n        if (!friend.clicked) {\n          friend.clicked = true;\n        }\n\n      }\n\n      return friend;\n\n    });\n\n\n\n    console.log(friends)\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends: newArray });\n\n\n    const newShuffled = this.state.friends.sort(() => Math.random() - 0.5)\n\n\n    this.setState({\n      friends: newShuffled\n    })\n\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Jumbotron></Jumbotron>\n        <Title> Current Score: {this.state.currentScore}  |  High Score: {this.state.highScore}</Title>\n       \n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}